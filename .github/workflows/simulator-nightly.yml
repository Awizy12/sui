name: simtest-nightly

  #on:
  #schedule:
  #  - cron: '0 0 * * *'  # every day at midnight
  #workflow_dispatch:
on:
  push:
    branches: [main, extensions, devnet]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

env:
  CARGO_TERM_COLOR: always
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short

jobs:
  simtest:
    timeout-minutes: 90
    runs-on: [ubuntu-ghcloud]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
      - uses: taiki-e/install-action@nextest
      - name: cargo simtest
        run: |
          MSIM_TEST_SEED=$(date +%s) MSIM_TEST_NUM=20 MSIM_WATCHDOG_TIMEOUT_MS=60000 scripts/simtest/cargo-simtest simtest

          # report-status:
          #   name: Report Status
          #   runs-on: ubuntu-latest
          #   if: always()
          #   needs: [release]
          #   steps:
          #     - uses: technote-space/workflow-conclusion-action@v3
          #
          #     - name: Post to slack
          #       uses: slackapi/slack-github-action@v1.23.0
          #       env:
          #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          #       if: env.WORKFLOW_CONCLUSION == 'failure' # notify only if failure
          #       with:
          #         channel-id: 'build-failures-sui'
          #         payload: |
          #           {
          #             "text": "Workflow *${{ github.workflow }}* failed",
          #             "blocks": [
          #               {
          #                 "type": "section",
          #                 "text": {
          #                   "type": "mrkdwn",
          #                   "text": "Workflow *${{ github.workflow }}* failed"
          #                 }
          #               },
          #               {
          #                 "type": "divider"
          #               },
          #               {
          #                 "type": "section",
          #                 "text": {
          #                   "type": "mrkdwn",
          #                   "text": "Logs are here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          #                 }
          #               }
          #             ]
          #           }
